name: Python CI for Multiple OS

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, ubuntu-latest]

    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: Update Version in Application
        run: |
          TAG_NAME=${GITHUB_REF#refs/tags/}
          MAINTAINER_EMAIL="${{ github.actor }}@users.noreply.github.com"
          BUILD_DATE=$(date -u +'%Y-%m-%d')
          COMMIT_HASH=${{ github.sha }}

          echo "New Tag: $TAG_NAME"
          echo "Maintainer: $MAINTAINER_EMAIL"
          echo "Build Date: $BUILD_DATE"
          echo "Commit Hash: $COMMIT_HASH"

          sed -i "s/APP_VERSION = \".*\"/APP_VERSION = \"$TAG_NAME\"/" app/tutorial.py
          sed -i "s/MAINTAINER = \".*\"/MAINTAINER = \"$MAINTAINER_EMAIL\"/" app/tutorial.py
          sed -i "s/BUILD_DATE = \".*\"/BUILD_DATE = \"$BUILD_DATE\"/" app/tutorial.py
          sed -i "s/COMMIT_HASH = \".*\"/COMMIT_HASH = \"$COMMIT_HASH\"/" app/tutorial.py
        shell: bash

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          pip install -r requirements.build.txt
          pip install -r app/requirements.txt

      - name: Build executable
        run: pyinstaller --name tutorial app/tutorial.py --onefile

      - name: Archive dist folder for Windows
        if: ${{ matrix.os == 'windows-latest' }}
        run: Compress-Archive -Path dist/* -DestinationPath dist-windows-latest.zip
        shell: pwsh

      - name: Archive dist folder for Linux
        if: ${{ matrix.os != 'windows-latest' }}
        run: tar -czvf dist-ubuntu-latest.tar.gz dist/
        shell: bash

      - name: upload executable (Linux)
        if: ${{ matrix.os != 'windows-latest' }}
        uses: actions/upload-artifact@v3
        with:
          name: dist-ubuntu-latest
          path: dist-ubuntu-latest.tar.gz

      - name: upload executable (Windows)
        if: ${{ matrix.os == 'windows-latest' }}
        uses: actions/upload-artifact@v3
        with:
          name: dist-windows-latest
          path: dist-windows-latest.zip
  
  release:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Download dist folders
        uses: actions/download-artifact@v3
        with:
          name: dist-ubuntu-latest

      - uses: actions/download-artifact@v3
        with:
          name: dist-windows-latest

      - uses: ncipollo/release-action@v1
        with:
          tag: ${{ github.ref_name }}
          artifacts: "dist-ubuntu-latest.tar.gz, dist-windows-latest.zip"
